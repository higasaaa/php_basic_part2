<?php
// 正規表現を使ってみよう！
//正規表現とは文字列のパターンを表現するための方法

/**
 * よく使う表現
 * . 任意の一文字
 * * 0回以上の繰り返し
 * + 1回以上の繰り返し
 * {n} n回の繰り返し
 * [] 文字クラスの作成
 * [abc] aまたはbまたはc
 * [^abc] aまたはbまたはc以外
 * [0-9] 0~9まで
 * [a-z] a~zまで
 * $ 終端一致
 * ^ 先頭一致
 * \w 半角英数字とアンダースコア
 * \d 数値
 * \ エスケープ
 * () 文字列の抜き出し
 */

// $char = 'aAabd1_sscc';
// if(preg_match("/\waa/i", $char, $result)) { //\wは半角英数字とアンダースコアに一致するということになる。任意の文字列を全ての文字列に対して検索できるようになる。iを足すと大文字と小文字を区別しないという意味になる
//     echo '検索成功';
//     print_r($result);
// } else {
//     echo '検索失敗';
// }

// $char = 'ZAabd1_sscc';
// if(preg_match("/[a-zA-Z]aa/i", $char, $result)) { //角カッコでもかける（[]内は一文字と見做される）
//     echo '検索成功';
//     print_r($result);
// } else {
//     echo '検索失敗';
// }

// $char = '1ZAabd12_sscc';
// if(preg_match("/[^a-zA-Z]{1,3}/i", $char, $result)) { //[]内に^を付けるとa-z以外の文字列に一致させるという意味
//     echo '検索成功';
//     print_r($result); //意図していないところで検索結果がマッチしている可能性があるため、必ずどこが一致しているのか調べる。
// } else {
//     echo '検索失敗';
// }

// $char = '<h2>1ZAabd12_sscc</h2>';
// if(preg_match("/<h2>.{2,}<\/h2>/i", $char, $result)) { //{２,}内はn回以上繰り返す h2タグで囲われているとタグごとに取り出せてしまう
//     print_r($result); //意図していないところで検索結果がマッチしている可能性があるため、必ずどこが一致しているのか調べる。
// } else {
//     echo '検索失敗';
// }

// $char = '<h2>1ZAabd12_sscc</h2>';
// if(preg_match("/<h2>(.{2,})<\/h2>/i", $char, $result)) { //{２,}内はn回以上繰り返す h2タグの中身だけ取り出したい場合は（）で囲んであげる
//     print_r($result); //意図していないところで検索結果がマッチしている可能性があるため、必ずどこが一致しているのか調べる。
// } else {
//     echo '検索失敗';
// }

$char = '1';
if(preg_match("/.+/i", $char, $result)) { 
    echo '検索成功';
    print_r($result); //意図していないところで検索結果がマッチしている可能性があるため、必ずどこが一致しているのか調べる。
} else {
    echo '検索失敗';
}

//正規表現のオプションがあるcomandF?